vendor_name = ModelSim
source_file = 1, C:/Users/micha/Documents/ee271/lab8 - Elevator/DE1_SoC.sv
source_file = 1, C:/Users/micha/Documents/ee271/lab8 - Elevator/myDFF.sv
source_file = 1, C:/Users/micha/Documents/ee271/lab8 - Elevator/input_buffer.sv
source_file = 1, C:/Users/micha/Documents/ee271/lab8 - Elevator/input_blink.sv
source_file = 1, C:/Users/micha/Documents/ee271/lab8 - Elevator/play_light.sv
source_file = 1, C:/Users/micha/Documents/ee271/lab8 - Elevator/ProgramTheDE1_SoC.cdf
source_file = 1, C:/Users/micha/Documents/ee271/lab8 - Elevator/LFSR_10bit.sv
source_file = 1, C:/Users/micha/Documents/ee271/lab8 - Elevator/score_counter.sv
source_file = 1, C:/Users/micha/Documents/ee271/lab8 - Elevator/comparator_10bit.sv
source_file = 1, C:/Users/micha/Documents/ee271/lab8 - Elevator/buttons_controller.sv
source_file = 1, C:/Users/micha/Documents/ee271/lab8 - Elevator/floor_tracker.sv
source_file = 1, C:/Users/micha/Documents/ee271/lab8 - Elevator/myDFF_6b.sv
source_file = 1, C:/Users/micha/Documents/ee271/lab8 - Elevator/DE1_SoC.sdc
source_file = 1, C:/Users/micha/Documents/ee271/lab8 - Elevator/db/DE1_SoC.cbx.xml
design_name = DE1_SoC
instance = comp, \HEX0[0]~output , HEX0[0]~output, DE1_SoC, 1
instance = comp, \HEX0[1]~output , HEX0[1]~output, DE1_SoC, 1
instance = comp, \HEX0[2]~output , HEX0[2]~output, DE1_SoC, 1
instance = comp, \HEX0[3]~output , HEX0[3]~output, DE1_SoC, 1
instance = comp, \HEX0[4]~output , HEX0[4]~output, DE1_SoC, 1
instance = comp, \HEX0[5]~output , HEX0[5]~output, DE1_SoC, 1
instance = comp, \HEX0[6]~output , HEX0[6]~output, DE1_SoC, 1
instance = comp, \HEX1[0]~output , HEX1[0]~output, DE1_SoC, 1
instance = comp, \HEX1[1]~output , HEX1[1]~output, DE1_SoC, 1
instance = comp, \HEX1[2]~output , HEX1[2]~output, DE1_SoC, 1
instance = comp, \HEX1[3]~output , HEX1[3]~output, DE1_SoC, 1
instance = comp, \HEX1[4]~output , HEX1[4]~output, DE1_SoC, 1
instance = comp, \HEX1[5]~output , HEX1[5]~output, DE1_SoC, 1
instance = comp, \HEX1[6]~output , HEX1[6]~output, DE1_SoC, 1
instance = comp, \HEX2[0]~output , HEX2[0]~output, DE1_SoC, 1
instance = comp, \HEX2[1]~output , HEX2[1]~output, DE1_SoC, 1
instance = comp, \HEX2[2]~output , HEX2[2]~output, DE1_SoC, 1
instance = comp, \HEX2[3]~output , HEX2[3]~output, DE1_SoC, 1
instance = comp, \HEX2[4]~output , HEX2[4]~output, DE1_SoC, 1
instance = comp, \HEX2[5]~output , HEX2[5]~output, DE1_SoC, 1
instance = comp, \HEX2[6]~output , HEX2[6]~output, DE1_SoC, 1
instance = comp, \HEX3[0]~output , HEX3[0]~output, DE1_SoC, 1
instance = comp, \HEX3[1]~output , HEX3[1]~output, DE1_SoC, 1
instance = comp, \HEX3[2]~output , HEX3[2]~output, DE1_SoC, 1
instance = comp, \HEX3[3]~output , HEX3[3]~output, DE1_SoC, 1
instance = comp, \HEX3[4]~output , HEX3[4]~output, DE1_SoC, 1
instance = comp, \HEX3[5]~output , HEX3[5]~output, DE1_SoC, 1
instance = comp, \HEX3[6]~output , HEX3[6]~output, DE1_SoC, 1
instance = comp, \HEX4[0]~output , HEX4[0]~output, DE1_SoC, 1
instance = comp, \HEX4[1]~output , HEX4[1]~output, DE1_SoC, 1
instance = comp, \HEX4[2]~output , HEX4[2]~output, DE1_SoC, 1
instance = comp, \HEX4[3]~output , HEX4[3]~output, DE1_SoC, 1
instance = comp, \HEX4[4]~output , HEX4[4]~output, DE1_SoC, 1
instance = comp, \HEX4[5]~output , HEX4[5]~output, DE1_SoC, 1
instance = comp, \HEX4[6]~output , HEX4[6]~output, DE1_SoC, 1
instance = comp, \HEX5[0]~output , HEX5[0]~output, DE1_SoC, 1
instance = comp, \HEX5[1]~output , HEX5[1]~output, DE1_SoC, 1
instance = comp, \HEX5[2]~output , HEX5[2]~output, DE1_SoC, 1
instance = comp, \HEX5[3]~output , HEX5[3]~output, DE1_SoC, 1
instance = comp, \HEX5[4]~output , HEX5[4]~output, DE1_SoC, 1
instance = comp, \HEX5[5]~output , HEX5[5]~output, DE1_SoC, 1
instance = comp, \HEX5[6]~output , HEX5[6]~output, DE1_SoC, 1
instance = comp, \LEDR[0]~output , LEDR[0]~output, DE1_SoC, 1
instance = comp, \LEDR[1]~output , LEDR[1]~output, DE1_SoC, 1
instance = comp, \LEDR[2]~output , LEDR[2]~output, DE1_SoC, 1
instance = comp, \LEDR[3]~output , LEDR[3]~output, DE1_SoC, 1
instance = comp, \LEDR[4]~output , LEDR[4]~output, DE1_SoC, 1
instance = comp, \LEDR[5]~output , LEDR[5]~output, DE1_SoC, 1
instance = comp, \LEDR[6]~output , LEDR[6]~output, DE1_SoC, 1
instance = comp, \LEDR[7]~output , LEDR[7]~output, DE1_SoC, 1
instance = comp, \LEDR[8]~output , LEDR[8]~output, DE1_SoC, 1
instance = comp, \LEDR[9]~output , LEDR[9]~output, DE1_SoC, 1
instance = comp, \CLOCK_50~input , CLOCK_50~input, DE1_SoC, 1
instance = comp, \CLOCK_50~inputCLKENA0 , CLOCK_50~inputCLKENA0, DE1_SoC, 1
instance = comp, \cdiv|Add0~89 , cdiv|Add0~89, DE1_SoC, 1
instance = comp, \KEY[3]~input , KEY[3]~input, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[0] , cdiv|divided_clocks[0], DE1_SoC, 1
instance = comp, \cdiv|Add0~85 , cdiv|Add0~85, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[1] , cdiv|divided_clocks[1], DE1_SoC, 1
instance = comp, \cdiv|Add0~81 , cdiv|Add0~81, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[2] , cdiv|divided_clocks[2], DE1_SoC, 1
instance = comp, \cdiv|Add0~77 , cdiv|Add0~77, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[3] , cdiv|divided_clocks[3], DE1_SoC, 1
instance = comp, \cdiv|Add0~73 , cdiv|Add0~73, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[4] , cdiv|divided_clocks[4], DE1_SoC, 1
instance = comp, \cdiv|Add0~69 , cdiv|Add0~69, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[5] , cdiv|divided_clocks[5], DE1_SoC, 1
instance = comp, \cdiv|Add0~65 , cdiv|Add0~65, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[6] , cdiv|divided_clocks[6], DE1_SoC, 1
instance = comp, \cdiv|Add0~61 , cdiv|Add0~61, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[7] , cdiv|divided_clocks[7], DE1_SoC, 1
instance = comp, \cdiv|Add0~57 , cdiv|Add0~57, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[8] , cdiv|divided_clocks[8], DE1_SoC, 1
instance = comp, \cdiv|Add0~53 , cdiv|Add0~53, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[9] , cdiv|divided_clocks[9], DE1_SoC, 1
instance = comp, \cdiv|Add0~49 , cdiv|Add0~49, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[10] , cdiv|divided_clocks[10], DE1_SoC, 1
instance = comp, \cdiv|Add0~45 , cdiv|Add0~45, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[11] , cdiv|divided_clocks[11], DE1_SoC, 1
instance = comp, \cdiv|Add0~41 , cdiv|Add0~41, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[12] , cdiv|divided_clocks[12], DE1_SoC, 1
instance = comp, \cdiv|Add0~37 , cdiv|Add0~37, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[13] , cdiv|divided_clocks[13], DE1_SoC, 1
instance = comp, \cdiv|Add0~33 , cdiv|Add0~33, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[14] , cdiv|divided_clocks[14], DE1_SoC, 1
instance = comp, \cdiv|Add0~29 , cdiv|Add0~29, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[15] , cdiv|divided_clocks[15], DE1_SoC, 1
instance = comp, \cdiv|Add0~25 , cdiv|Add0~25, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[16] , cdiv|divided_clocks[16], DE1_SoC, 1
instance = comp, \cdiv|Add0~21 , cdiv|Add0~21, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[17] , cdiv|divided_clocks[17], DE1_SoC, 1
instance = comp, \cdiv|Add0~17 , cdiv|Add0~17, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[18] , cdiv|divided_clocks[18], DE1_SoC, 1
instance = comp, \cdiv|Add0~13 , cdiv|Add0~13, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[19] , cdiv|divided_clocks[19], DE1_SoC, 1
instance = comp, \cdiv|Add0~9 , cdiv|Add0~9, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[20] , cdiv|divided_clocks[20], DE1_SoC, 1
instance = comp, \cdiv|Add0~5 , cdiv|Add0~5, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[21] , cdiv|divided_clocks[21], DE1_SoC, 1
instance = comp, \cdiv|Add0~1 , cdiv|Add0~1, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[22] , cdiv|divided_clocks[22], DE1_SoC, 1
instance = comp, \SW[3]~input , SW[3]~input, DE1_SoC, 1
instance = comp, \SW[9]~input , SW[9]~input, DE1_SoC, 1
instance = comp, \dff1|Q~feeder , dff1|Q~feeder, DE1_SoC, 1
instance = comp, \dff1|Q , dff1|Q, DE1_SoC, 1
instance = comp, \dff2|Q , dff2|Q, DE1_SoC, 1
instance = comp, \dff3|Q[3] , dff3|Q[3], DE1_SoC, 1
instance = comp, \dff4|Q[3] , dff4|Q[3], DE1_SoC, 1
instance = comp, \elevatorButtons|ns[3]~3 , elevatorButtons|ns[3]~3, DE1_SoC, 1
instance = comp, \elevatorButtons|ps[3]~DUPLICATE , elevatorButtons|ps[3]~DUPLICATE, DE1_SoC, 1
instance = comp, \SW[1]~input , SW[1]~input, DE1_SoC, 1
instance = comp, \dff3|Q[1] , dff3|Q[1], DE1_SoC, 1
instance = comp, \dff4|Q[1] , dff4|Q[1], DE1_SoC, 1
instance = comp, \elevatorButtons|ns[1]~1 , elevatorButtons|ns[1]~1, DE1_SoC, 1
instance = comp, \elevatorButtons|ps[1] , elevatorButtons|ps[1], DE1_SoC, 1
instance = comp, \Decoder2~0 , Decoder2~0, DE1_SoC, 1
instance = comp, \SW[5]~input , SW[5]~input, DE1_SoC, 1
instance = comp, \dff3|Q[5] , dff3|Q[5], DE1_SoC, 1
instance = comp, \dff4|Q[5] , dff4|Q[5], DE1_SoC, 1
instance = comp, \elevatorButtons|ns[5]~5 , elevatorButtons|ns[5]~5, DE1_SoC, 1
instance = comp, \elevatorButtons|ps[5] , elevatorButtons|ps[5], DE1_SoC, 1
instance = comp, \SW[4]~input , SW[4]~input, DE1_SoC, 1
instance = comp, \dff3|Q[4] , dff3|Q[4], DE1_SoC, 1
instance = comp, \dff4|Q[4] , dff4|Q[4], DE1_SoC, 1
instance = comp, \elevatorButtons|ns[4]~4 , elevatorButtons|ns[4]~4, DE1_SoC, 1
instance = comp, \elevatorButtons|ps[4] , elevatorButtons|ps[4], DE1_SoC, 1
instance = comp, \elevatorController|Equal1~1 , elevatorController|Equal1~1, DE1_SoC, 1
instance = comp, \elevatorController|Mux3~1 , elevatorController|Mux3~1, DE1_SoC, 1
instance = comp, \SW[2]~input , SW[2]~input, DE1_SoC, 1
instance = comp, \dff3|Q[2] , dff3|Q[2], DE1_SoC, 1
instance = comp, \dff4|Q[2] , dff4|Q[2], DE1_SoC, 1
instance = comp, \elevatorButtons|ns[2]~2 , elevatorButtons|ns[2]~2, DE1_SoC, 1
instance = comp, \elevatorButtons|ps[2] , elevatorButtons|ps[2], DE1_SoC, 1
instance = comp, \elevatorController|Equal1~0 , elevatorController|Equal1~0, DE1_SoC, 1
instance = comp, \elevatorController|doors_open[0]~2 , elevatorController|doors_open[0]~2, DE1_SoC, 1
instance = comp, \KEY[0]~input , KEY[0]~input, DE1_SoC, 1
instance = comp, \KEY[0]~_wirecell , KEY[0]~_wirecell, DE1_SoC, 1
instance = comp, \dff5|Q , dff5|Q, DE1_SoC, 1
instance = comp, \dff6|Q , dff6|Q, DE1_SoC, 1
instance = comp, \blink1|ps[0] , blink1|ps[0], DE1_SoC, 1
instance = comp, \elevatorController|doors_open[1]~8 , elevatorController|doors_open[1]~8, DE1_SoC, 1
instance = comp, \elevatorController|doors_open[1]~6 , elevatorController|doors_open[1]~6, DE1_SoC, 1
instance = comp, \elevatorController|doors_open[0]~1 , elevatorController|doors_open[0]~1, DE1_SoC, 1
instance = comp, \elevatorController|doors_open[1]~7 , elevatorController|doors_open[1]~7, DE1_SoC, 1
instance = comp, \elevatorController|doors_open[1]~9 , elevatorController|doors_open[1]~9, DE1_SoC, 1
instance = comp, \elevatorController|doors_open[1] , elevatorController|doors_open[1], DE1_SoC, 1
instance = comp, \elevatorController|Mux3~2 , elevatorController|Mux3~2, DE1_SoC, 1
instance = comp, \elevatorController|doors_open[0]~0 , elevatorController|doors_open[0]~0, DE1_SoC, 1
instance = comp, \elevatorController|floor_ns[1]~15 , elevatorController|floor_ns[1]~15, DE1_SoC, 1
instance = comp, \elevatorButtons|ps[3] , elevatorButtons|ps[3], DE1_SoC, 1
instance = comp, \elevatorController|always0~1 , elevatorController|always0~1, DE1_SoC, 1
instance = comp, \elevatorController|Mux3~3 , elevatorController|Mux3~3, DE1_SoC, 1
instance = comp, \elevatorController|floor_ns~1 , elevatorController|floor_ns~1, DE1_SoC, 1
instance = comp, \elevatorController|always0~0 , elevatorController|always0~0, DE1_SoC, 1
instance = comp, \elevatorController|Mux3~4 , elevatorController|Mux3~4, DE1_SoC, 1
instance = comp, \elevatorController|Mux3~5 , elevatorController|Mux3~5, DE1_SoC, 1
instance = comp, \elevatorController|floor_ns[1]~14 , elevatorController|floor_ns[1]~14, DE1_SoC, 1
instance = comp, \elevatorController|Mux3~0 , elevatorController|Mux3~0, DE1_SoC, 1
instance = comp, \elevatorController|Mux3~6 , elevatorController|Mux3~6, DE1_SoC, 1
instance = comp, \elevatorController|Mux3~7 , elevatorController|Mux3~7, DE1_SoC, 1
instance = comp, \elevatorController|direction , elevatorController|direction, DE1_SoC, 1
instance = comp, \elevatorController|doors_open[0]~3 , elevatorController|doors_open[0]~3, DE1_SoC, 1
instance = comp, \elevatorController|doors_open[0]~4 , elevatorController|doors_open[0]~4, DE1_SoC, 1
instance = comp, \elevatorController|doors_open[0]~5 , elevatorController|doors_open[0]~5, DE1_SoC, 1
instance = comp, \elevatorController|doors_open[0] , elevatorController|doors_open[0], DE1_SoC, 1
instance = comp, \elevatorController|floor_ns[0]~4 , elevatorController|floor_ns[0]~4, DE1_SoC, 1
instance = comp, \elevatorController|floor_ns[0]~5 , elevatorController|floor_ns[0]~5, DE1_SoC, 1
instance = comp, \elevatorController|floor_ns[0]~6 , elevatorController|floor_ns[0]~6, DE1_SoC, 1
instance = comp, \elevatorController|floor_ns[2]~0 , elevatorController|floor_ns[2]~0, DE1_SoC, 1
instance = comp, \elevatorController|floor_ns~2 , elevatorController|floor_ns~2, DE1_SoC, 1
instance = comp, \elevatorController|floor_ns~3 , elevatorController|floor_ns~3, DE1_SoC, 1
instance = comp, \elevatorController|Mux2~0 , elevatorController|Mux2~0, DE1_SoC, 1
instance = comp, \elevatorController|floor_ns[0]~7 , elevatorController|floor_ns[0]~7, DE1_SoC, 1
instance = comp, \elevatorController|curr_floor[0] , elevatorController|curr_floor[0], DE1_SoC, 1
instance = comp, \SW[0]~input , SW[0]~input, DE1_SoC, 1
instance = comp, \dff3|Q[0] , dff3|Q[0], DE1_SoC, 1
instance = comp, \dff4|Q[0] , dff4|Q[0], DE1_SoC, 1
instance = comp, \elevatorButtons|ps[0] , elevatorButtons|ps[0], DE1_SoC, 1
instance = comp, \elevatorButtons|ns[0]~0 , elevatorButtons|ns[0]~0, DE1_SoC, 1
instance = comp, \elevatorButtons|ps[0]~DUPLICATE , elevatorButtons|ps[0]~DUPLICATE, DE1_SoC, 1
instance = comp, \elevatorController|floor_ns[1]~9 , elevatorController|floor_ns[1]~9, DE1_SoC, 1
instance = comp, \elevatorController|floor_ns[1]~10 , elevatorController|floor_ns[1]~10, DE1_SoC, 1
instance = comp, \elevatorController|floor_ns[1]~11 , elevatorController|floor_ns[1]~11, DE1_SoC, 1
instance = comp, \elevatorController|floor_ns[1]~8 , elevatorController|floor_ns[1]~8, DE1_SoC, 1
instance = comp, \elevatorController|floor_ns[1]~12 , elevatorController|floor_ns[1]~12, DE1_SoC, 1
instance = comp, \elevatorController|curr_floor[1] , elevatorController|curr_floor[1], DE1_SoC, 1
instance = comp, \elevatorController|floor_ns[2]~13 , elevatorController|floor_ns[2]~13, DE1_SoC, 1
instance = comp, \elevatorController|floor_ns[2]~16 , elevatorController|floor_ns[2]~16, DE1_SoC, 1
instance = comp, \elevatorController|curr_floor[2] , elevatorController|curr_floor[2], DE1_SoC, 1
instance = comp, \HEX0~0 , HEX0~0, DE1_SoC, 1
instance = comp, \WideOr1~0 , WideOr1~0, DE1_SoC, 1
instance = comp, \Decoder1~0 , Decoder1~0, DE1_SoC, 1
instance = comp, \WideOr2~0 , WideOr2~0, DE1_SoC, 1
instance = comp, \HEX1~0 , HEX1~0, DE1_SoC, 1
instance = comp, \WideOr0~0 , WideOr0~0, DE1_SoC, 1
instance = comp, \KEY[1]~input , KEY[1]~input, DE1_SoC, 1
instance = comp, \KEY[2]~input , KEY[2]~input, DE1_SoC, 1
instance = comp, \SW[6]~input , SW[6]~input, DE1_SoC, 1
instance = comp, \SW[7]~input , SW[7]~input, DE1_SoC, 1
instance = comp, \SW[8]~input , SW[8]~input, DE1_SoC, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, DE1_SoC, 1
